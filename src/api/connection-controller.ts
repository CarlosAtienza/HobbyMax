/**
 * Generated by orval v7.13.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

import type {
  ConnectionRequestDTO,
  ConnectionResponseDTO
} from '../../models/api';





  export const declineRequest = <TData = AxiosResponse<ConnectionResponseDTO>>(
    id: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/connection/${id}/decline`,undefined,options
    );
  }
export const acceptRequest = <TData = AxiosResponse<ConnectionResponseDTO>>(
    id: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/connection/${id}/accept`,undefined,options
    );
  }
export const sendRequest = <TData = AxiosResponse<ConnectionResponseDTO>>(
    connectionRequestDTO: ConnectionRequestDTO, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/connection/send`,
      connectionRequestDTO,options
    );
  }
export const getConnectionsForUser = <TData = AxiosResponse<ConnectionResponseDTO[]>>(
    userId: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/connection/user/${userId}`,options
    );
  }
export const getPendingRequests = <TData = AxiosResponse<ConnectionResponseDTO[]>>(
    userId: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/connection/user/${userId}/pending`,options
    );
  }
export type DeclineRequestResult = AxiosResponse<ConnectionResponseDTO>
export type AcceptRequestResult = AxiosResponse<ConnectionResponseDTO>
export type SendRequestResult = AxiosResponse<ConnectionResponseDTO>
export type GetConnectionsForUserResult = AxiosResponse<ConnectionResponseDTO[]>
export type GetPendingRequestsResult = AxiosResponse<ConnectionResponseDTO[]>
