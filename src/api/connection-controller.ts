/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import type {
  ConnectionRequestDTO,
  ConnectionResponseDTO
} from '../../models/api';

import { axiosInstance } from '../../lib/axios';




  export const declineRequest = (
    id: number,
 ) => {
      return axiosInstance<ConnectionResponseDTO>(
      {url: `/api/connection/${id}/decline`, method: 'POST'
    },
      );
    }
  export const acceptRequest = (
    id: number,
 ) => {
      return axiosInstance<ConnectionResponseDTO>(
      {url: `/api/connection/${id}/accept`, method: 'POST'
    },
      );
    }
  export const sendRequest = (
    connectionRequestDTO: ConnectionRequestDTO,
 ) => {
      return axiosInstance<ConnectionResponseDTO>(
      {url: `/api/connection/send`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: connectionRequestDTO
    },
      );
    }
  export const getConnectionsForUser = (
    userId: number,
 ) => {
      return axiosInstance<ConnectionResponseDTO[]>(
      {url: `/api/connection/user/${userId}`, method: 'GET'
    },
      );
    }
  export const getPendingRequests = (
    userId: number,
 ) => {
      return axiosInstance<ConnectionResponseDTO[]>(
      {url: `/api/connection/user/${userId}/pending`, method: 'GET'
    },
      );
    }
  export type DeclineRequestResult = NonNullable<Awaited<ReturnType<typeof declineRequest>>>
export type AcceptRequestResult = NonNullable<Awaited<ReturnType<typeof acceptRequest>>>
export type SendRequestResult = NonNullable<Awaited<ReturnType<typeof sendRequest>>>
export type GetConnectionsForUserResult = NonNullable<Awaited<ReturnType<typeof getConnectionsForUser>>>
export type GetPendingRequestsResult = NonNullable<Awaited<ReturnType<typeof getPendingRequests>>>
